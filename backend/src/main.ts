import { NestFactory } from '@nestjs/core';
import { AppModule } from './app.module';
import { ValidationPipe } from '@nestjs/common';
import helmet from 'helmet';
import * as compression from 'compression';
import { SwaggerModule, DocumentBuilder } from '@nestjs/swagger';

async function bootstrap() {
  const app = await NestFactory.create(AppModule);
  app.useLogger(['log', 'error', 'warn', 'debug', 'verbose']);

  app.use(helmet());
  app.use(compression());
  app.useGlobalPipes(new ValidationPipe());

  // üöÄ Prefixo global para todas as rotas da API
  app.setGlobalPrefix('api');

  // üìö Configura√ß√£o do Swagger
  const config = new DocumentBuilder()
    .setTitle('GestaSaaS API')
    .setDescription('API para sistema de gest√£o SaaS com controle de assinaturas, pagamentos e quilometragem')
    .setVersion('1.0')
    .addBearerAuth()
    .addTag('auth', 'Autentica√ß√£o e autoriza√ß√£o')
    .addTag('tenants', 'Gest√£o de tenants')
    .addTag('usuarios', 'Gest√£o de usu√°rios')
    .addTag('planos', 'Gest√£o de planos')
    .addTag('assinaturas', 'Gest√£o de assinaturas')
    .addTag('pagamentos', 'Gest√£o de pagamentos')
    .addTag('financeiro', 'Controle financeiro')
    .addTag('km', 'Controle de quilometragem')
    .addTag('relatorios', 'Relat√≥rios')
    .addTag('configuracoes', 'Configura√ß√µes')
    .addTag('auditoria', 'Auditoria')
    .addTag('health', 'Health check')
    .build();

  const document = SwaggerModule.createDocument(app, config);
  SwaggerModule.setup('api/docs', app, document, {
    swaggerOptions: {
      persistAuthorization: true,
    },
  });
  
  // üöÄ CORS configurado para produ√ß√£o
  app.enableCors({ origin: ['https://app.fluxvision.cloud'], credentials: true });
  // Desenvolvimento: const corsOrigins = process.env.CORS_ORIGINS?.split(',') || ['http://localhost:5173', 'http://localhost:3000', 'http://localhost:3001'];
  // Desenvolvimento: app.enableCors({ origin: corsOrigins, credentials: true });

const port = process.env.PORT || 3001;
await app.listen(port);
  
  console.log(`üìö Documenta√ß√£o dispon√≠vel em https://api.fluxvision.cloud/api/docs`);
  // Desenvolvimento: const baseUrl = process.env.BASE_URL || `http://localhost:${port}`;
  // Desenvolvimento: console.log(`üìö Documenta√ß√£o dispon√≠vel em ${baseUrl}/api/docs`);
  console.log(`üöÄ Server running on port ${port}`);
  console.log(`üåê CORS habilitado para: https://app.fluxvision.cloud`);
}
bootstrap();
