import { NestFactory } from '@nestjs/core';
import { AppModule } from './src/app.module';
import { ConfiguracoesService } from './src/modules/configuracoes/configuracoes.service';

async function testConfiguracoes() {
  console.log('üß™ Testando sistema de configura√ß√µes...');
  
  try {
    const app = await NestFactory.createApplicationContext(AppModule);
    const configuracoesService = app.get(ConfiguracoesService);
    
    // Teste 1: Buscar configura√ß√£o global
    console.log('üìã Teste 1: Buscar configura√ß√£o global');
    const appName = await configuracoesService.getConfiguracao('app_name');
    console.log(`App Name: ${appName}`);
    
    // Teste 2: Buscar configura√ß√£o que n√£o existe
    console.log('üìã Teste 2: Buscar configura√ß√£o inexistente');
    const inexistente = await configuracoesService.getConfiguracao('config_inexistente', null, 'valor_padrao');
    console.log(`Configura√ß√£o inexistente: ${inexistente}`);
    
    // Teste 3: Definir nova configura√ß√£o
    console.log('üìã Teste 3: Definir nova configura√ß√£o');
    await configuracoesService.setConfiguracao('teste_config', 'valor_teste');
    const testeConfig = await configuracoesService.getConfiguracao('teste_config');
    console.log(`Teste Config: ${testeConfig}`);
    
    console.log('‚úÖ Todos os testes passaram!');
    
    await app.close();
  } catch (error) {
    console.error('‚ùå Erro nos testes:', error.message);
    process.exit(1);
  }
}

testConfiguracoes();