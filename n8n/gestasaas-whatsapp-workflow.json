{
  "name": "GestaSaaS - WhatsApp Database Manager",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "whatsapp-webhook",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-whatsapp",
      "name": "Webhook WhatsApp",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300],
      "webhookId": "whatsapp-gestasaas"
    },
    {
      "parameters": {
        "functionCode": "// Extrair e validar n√∫mero do WhatsApp\nconst body = $input.all()[0].json.body;\n\n// Verificar se √© uma mensagem v√°lida\nif (!body || !body.data || !body.data.key || !body.data.key.remoteJid) {\n  return {\n    error: true,\n    message: 'Dados inv√°lidos recebidos',\n    data: body\n  };\n}\n\nconst whatsappId = body.data.key.remoteJid;\nconst messageText = body.data.message?.conversation || \n                   body.data.message?.extendedTextMessage?.text || '';\n\n// Extrair n√∫mero de telefone\nconst phoneNumber = whatsappId.split('@')[0];\nconst phoneE164 = '+' + phoneNumber;\n\n// Verificar se √© um grupo (grupos terminam com @g.us)\nif (whatsappId.includes('@g.us')) {\n  return {\n    error: true,\n    message: 'Mensagens de grupo n√£o s√£o suportadas',\n    isGroup: true\n  };\n}\n\n// Extrair comando da mensagem\nconst command = messageText.toLowerCase().trim();\n\nreturn {\n  error: false,\n  whatsapp_id: whatsappId,\n  telefone_e164: phoneE164,\n  telefone_numero: phoneNumber,\n  message_text: messageText,\n  command: command,\n  timestamp: new Date().toISOString(),\n  raw_data: body\n};"
      },
      "id": "process-whatsapp-data",
      "name": "Processar Dados WhatsApp",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [460, 300]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.error }}",
              "value2": false
            }
          ]
        }
      },
      "id": "validate-data",
      "name": "Validar Dados",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [680, 300]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n    u.id, u.tenant_id, u.nome, u.email, u.telefone_e164,\n    u.perfil, u.status, u.email_verificado, u.criado_em,\n    t.nome_fantasia as tenant_nome, t.status as tenant_status,\n    CASE \n        WHEN u.id IS NOT NULL THEN true \n        ELSE false \n    END as usuario_existe\nFROM public.usuarios u\nLEFT JOIN public.tenants t ON u.tenant_id = t.id\nWHERE u.telefone_e164 = '{{ $json.telefone_e164 }}'\n    AND u.status = 'ativo'\n    AND t.status = 'ativo'\nLIMIT 1;",
        "additionalFields": {}
      },
      "id": "find-user",
      "name": "Buscar Usu√°rio",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [900, 200],
      "credentials": {
        "postgres": {
          "id": "postgres-gestasaas",
          "name": "PostgreSQL GestaSaaS"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.usuario_existe }}",
              "value2": true
            }
          ]
        }
      },
      "id": "check-user-exists",
      "name": "Usu√°rio Existe?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [1120, 200]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "command",
              "value": "={{ $('Processar Dados WhatsApp').item.json.command }}"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            },
            {
              "name": "tenant_id",
              "value": "={{ $json.tenant_id }}"
            },
            {
              "name": "user_name",
              "value": "={{ $json.nome }}"
            },
            {
              "name": "telefone_e164",
              "value": "={{ $('Processar Dados WhatsApp').item.json.telefone_e164 }}"
            },
            {
              "name": "message_text",
              "value": "={{ $('Processar Dados WhatsApp').item.json.message_text }}"
            }
          ]
        },
        "options": {}
      },
      "id": "prepare-user-data",
      "name": "Preparar Dados Usu√°rio",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [1340, 100]
    },
    {
      "parameters": {
        "dataPropertyName": "data",
        "value1": "={{ $json.command }}",
        "rules": {
          "rules": [
            {
              "value2": "menu",
              "output": 0
            },
            {
              "value2": "ajuda",
              "output": 0
            },
            {
              "value2": "help",
              "output": 0
            },
            {
              "value2": "listar transacoes",
              "output": 1
            },
            {
              "value2": "transacoes",
              "output": 1
            },
            {
              "value2": "extrato",
              "output": 1
            },
            {
              "value2": "adicionar transacao",
              "output": 2
            },
            {
              "value2": "nova transacao",
              "output": 2
            },
            {
              "value2": "cadastrar gasto",
              "output": 2
            },
            {
              "value2": "editar transacao",
              "output": 3
            },
            {
              "value2": "alterar transacao",
              "output": 3
            },
            {
              "value2": "excluir transacao",
              "output": 4
            },
            {
              "value2": "deletar transacao",
              "output": 4
            },
            {
              "value2": "relatorio",
              "output": 5
            },
            {
              "value2": "resumo",
              "output": 5
            },
            {
              "value2": "meu perfil",
              "output": 6
            },
            {
              "value2": "perfil",
              "output": 6
            },
            {
              "value2": "dados",
              "output": 6
            }
          ]
        },
        "fallbackOutput": 7
      },
      "id": "command-switch",
      "name": "Switch Comandos",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 1,
      "position": [1560, 100]
    },
    {
      "parameters": {
        "model": "gpt-4",
        "messages": {
          "messageValues": [
            {
              "role": "system",
              "message": "Voc√™ √© um assistente virtual do GestaSaaS, um sistema de gest√£o financeira para motoristas de aplicativo. Seu nome √© Sofia.\n\nContexto do usu√°rio:\n- Nome: {{ $json.user_name }}\n- Telefone: {{ $json.telefone_e164 }}\n- Tenant ID: {{ $json.tenant_id }}\n\nVoc√™ deve:\n1. Ser amig√°vel e profissional\n2. Ajudar com comandos do sistema\n3. Explicar funcionalidades\n4. Orientar sobre uso correto\n5. Sempre manter o contexto do usu√°rio\n\nComandos dispon√≠veis:\n- 'menu' ou 'ajuda': Mostrar menu principal\n- 'transacoes' ou 'extrato': Listar transa√ß√µes\n- 'nova transacao': Adicionar transa√ß√£o\n- 'editar transacao': Modificar transa√ß√£o\n- 'excluir transacao': Remover transa√ß√£o\n- 'relatorio': Gerar relat√≥rio financeiro\n- 'perfil': Ver dados do perfil\n\nSempre termine suas respostas sugerindo um pr√≥ximo comando √∫til."
            },
            {
              "role": "user",
              "message": "{{ $json.message_text }}"
            }
          ]
        },
        "options": {
          "temperature": 0.7,
          "maxTokens": 500
        }
      },
      "id": "ai-assistant",
      "name": "Assistente IA",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1,
      "position": [1780, 500],
      "credentials": {
        "openAiApi": {
          "id": "openai-gestasaas",
          "name": "OpenAI GestaSaaS"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "// Gerar menu principal do sistema\nconst userName = $json.user_name || 'Usu√°rio';\n\nconst menuText = `üè† *Menu Principal - GestaSaaS*\n\nOl√°, ${userName}! üëã\n\nEscolha uma das op√ß√µes abaixo:\n\nüí∞ *Transa√ß√µes*\n‚Ä¢ Digite: *transacoes* - Ver extrato\n‚Ä¢ Digite: *nova transacao* - Adicionar gasto/ganho\n‚Ä¢ Digite: *editar transacao* - Modificar transa√ß√£o\n‚Ä¢ Digite: *excluir transacao* - Remover transa√ß√£o\n\nüìä *Relat√≥rios*\n‚Ä¢ Digite: *relatorio* - Resumo financeiro\n\nüë§ *Perfil*\n‚Ä¢ Digite: *perfil* - Ver meus dados\n\n‚ùì *Ajuda*\n‚Ä¢ Digite: *ajuda* - Ver este menu novamente\n\n---\nüí° *Dica:* Voc√™ pode conversar comigo naturalmente tamb√©m! Sou a Sofia, sua assistente virtual.`;\n\nreturn {\n  response_text: menuText,\n  response_type: 'menu',\n  user_id: $json.user_id,\n  tenant_id: $json.tenant_id,\n  telefone_e164: $json.telefone_e164\n};"
      },
      "id": "generate-menu",
      "name": "Gerar Menu",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [1780, 0]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n    tr.id, tr.tipo, tr.categoria, tr.descricao, \n    tr.valor_cents, tr.km, tr.data, tr.criado_em,\n    ROUND(tr.valor_cents / 100.0, 2) as valor_reais\nFROM public.transacoes tr\nWHERE tr.tenant_id = '{{ $json.tenant_id }}'\n    AND tr.usuario_id = '{{ $json.user_id }}'\nORDER BY tr.data DESC, tr.criado_em DESC\nLIMIT 10;",
        "additionalFields": {}
      },
      "id": "list-transactions",
      "name": "Listar Transa√ß√µes",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [1780, 100],
      "credentials": {
        "postgres": {
          "id": "postgres-gestasaas",
          "name": "PostgreSQL GestaSaaS"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "// Formatar lista de transa√ß√µes\nconst transactions = $input.all();\nconst userName = $('Preparar Dados Usu√°rio').item.json.user_name;\n\nif (!transactions || transactions.length === 0) {\n  return {\n    response_text: `üìã *Extrato - GestaSaaS*\\n\\nOl√°, ${userName}!\\n\\nVoc√™ ainda n√£o possui transa√ß√µes registradas.\\n\\nüí° Para adicionar uma transa√ß√£o, digite: *nova transacao*`,\n    response_type: 'empty_list',\n    user_id: $('Preparar Dados Usu√°rio').item.json.user_id,\n    tenant_id: $('Preparar Dados Usu√°rio').item.json.tenant_id,\n    telefone_e164: $('Preparar Dados Usu√°rio').item.json.telefone_e164\n  };\n}\n\nlet responseText = `üìã *Extrato - √öltimas 10 Transa√ß√µes*\\n\\nOl√°, ${userName}!\\n\\n`;\n\nlet totalEntradas = 0;\nlet totalSaidas = 0;\n\ntransactions.forEach((item, index) => {\n  const tr = item.json;\n  const valor = parseFloat(tr.valor_reais);\n  const data = new Date(tr.data).toLocaleDateString('pt-BR');\n  const tipo = tr.tipo === 'entrada' ? 'üí∞' : 'üí∏';\n  const valorFormatado = tr.tipo === 'entrada' ? `+R$ ${valor.toFixed(2)}` : `-R$ ${valor.toFixed(2)}`;\n  \n  if (tr.tipo === 'entrada') {\n    totalEntradas += valor;\n  } else {\n    totalSaidas += valor;\n  }\n  \n  responseText += `${tipo} *${tr.categoria}* - ${data}\\n`;\n  responseText += `   ${tr.descricao}\\n`;\n  responseText += `   ${valorFormatado}`;\n  if (tr.km) {\n    responseText += ` | ${tr.km}km`;\n  }\n  responseText += `\\n\\n`;\n});\n\nconst saldo = totalEntradas - totalSaidas;\nconst saldoIcon = saldo >= 0 ? '‚úÖ' : '‚ö†Ô∏è';\n\nresponseText += `üìä *Resumo:*\\n`;\nresponseText += `üí∞ Entradas: R$ ${totalEntradas.toFixed(2)}\\n`;\nresponseText += `üí∏ Sa√≠das: R$ ${totalSaidas.toFixed(2)}\\n`;\nresponseText += `${saldoIcon} Saldo: R$ ${saldo.toFixed(2)}\\n\\n`;\nresponseText += `üí° Digite *nova transacao* para adicionar\\n`;\nresponseText += `üí° Digite *relatorio* para ver mais detalhes`;\n\nreturn {\n  response_text: responseText,\n  response_type: 'transaction_list',\n  user_id: $('Preparar Dados Usu√°rio').item.json.user_id,\n  tenant_id: $('Preparar Dados Usu√°rio').item.json.tenant_id,\n  telefone_e164: $('Preparar Dados Usu√°rio').item.json.telefone_e164,\n  total_entradas: totalEntradas,\n  total_saidas: totalSaidas,\n  saldo: saldo\n};"
      },
      "id": "format-transactions",
      "name": "Formatar Transa√ß√µes",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [2000, 100]
    },
    {
      "parameters": {
        "functionCode": "// Guia para adicionar nova transa√ß√£o\nconst userName = $json.user_name || 'Usu√°rio';\n\nconst guideText = `‚ûï *Nova Transa√ß√£o - GestaSaaS*\\n\\nOl√°, ${userName}!\\n\\nPara adicionar uma transa√ß√£o, me envie as informa√ß√µes no formato:\\n\\nüìù *Formato:*\\n*Tipo: entrada/saida*\\n*Categoria: [categoria]*\\n*Valor: [valor]*\\n*Descri√ß√£o: [descri√ß√£o]*\\n*KM: [quilometragem]* (opcional)\\n*Data: [dd/mm/aaaa]* (opcional, padr√£o hoje)\\n\\nüìã *Exemplo:*\\n*Tipo: saida*\\n*Categoria: combustivel*\\n*Valor: 85.50*\\n*Descri√ß√£o: Abastecimento Posto Shell*\\n*KM: 45.2*\\n*Data: 20/10/2024*\\n\\nüè∑Ô∏è *Categorias Dispon√≠veis:*\\n\\n*Entradas:* plataforma, gorjeta, bonus, outros_ganhos\\n*Sa√≠das:* combustivel, manutencao, taxas, pedagio, alimentacao, estacionamento, outros_gastos\\n\\nüí° Ou converse comigo naturalmente que eu te ajudo!`;\n\nreturn {\n  response_text: guideText,\n  response_type: 'add_transaction_guide',\n  user_id: $json.user_id,\n  tenant_id: $json.tenant_id,\n  telefone_e164: $json.telefone_e164\n};"
      },
      "id": "add-transaction-guide",
      "name": "Guia Nova Transa√ß√£o",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [1780, 200]
    },
    {
      "parameters": {
        "functionCode": "// Guia para editar transa√ß√£o\nconst userName = $json.user_name || 'Usu√°rio';\n\nconst guideText = `‚úèÔ∏è *Editar Transa√ß√£o - GestaSaaS*\\n\\nOl√°, ${userName}!\\n\\nPara editar uma transa√ß√£o, primeiro vou listar suas transa√ß√µes recentes.\\n\\nDepois me informe:\\n\\nüìù *Formato:*\\n*Editar: [n√∫mero da transa√ß√£o]*\\n*Campo: [campo a alterar]*\\n*Novo valor: [novo valor]*\\n\\nüìã *Exemplo:*\\n*Editar: 1*\\n*Campo: valor*\\n*Novo valor: 95.50*\\n\\nüîß *Campos edit√°veis:*\\n‚Ä¢ tipo (entrada/saida)\\n‚Ä¢ categoria\\n‚Ä¢ valor\\n‚Ä¢ descri√ß√£o\\n‚Ä¢ km\\n‚Ä¢ data\\n\\nüí° Primeiro digite *transacoes* para ver a lista!`;\n\nreturn {\n  response_text: guideText,\n  response_type: 'edit_transaction_guide',\n  user_id: $json.user_id,\n  tenant_id: $json.tenant_id,\n  telefone_e164: $json.telefone_e164\n};"
      },
      "id": "edit-transaction-guide",
      "name": "Guia Editar Transa√ß√£o",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [1780, 300]
    },
    {
      "parameters": {
        "functionCode": "// Guia para excluir transa√ß√£o\nconst userName = $json.user_name || 'Usu√°rio';\n\nconst guideText = `üóëÔ∏è *Excluir Transa√ß√£o - GestaSaaS*\\n\\nOl√°, ${userName}!\\n\\nPara excluir uma transa√ß√£o, primeiro vou listar suas transa√ß√µes recentes.\\n\\nDepois me informe:\\n\\nüìù *Formato:*\\n*Excluir: [n√∫mero da transa√ß√£o]*\\n\\nüìã *Exemplo:*\\n*Excluir: 3*\\n\\n‚ö†Ô∏è *Aten√ß√£o:*\\nEsta a√ß√£o n√£o pode ser desfeita!\\n\\nüí° Primeiro digite *transacoes* para ver a lista!`;\n\nreturn {\n  response_text: guideText,\n  response_type: 'delete_transaction_guide',\n  user_id: $json.user_id,\n  tenant_id: $json.tenant_id,\n  telefone_e164: $json.telefone_e164\n};"
      },
      "id": "delete-transaction-guide",
      "name": "Guia Excluir Transa√ß√£o",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [1780, 400]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n    tr.tipo,\n    tr.categoria,\n    COUNT(*) as quantidade,\n    SUM(tr.valor_cents) as total_cents,\n    ROUND(SUM(tr.valor_cents) / 100.0, 2) as total_reais,\n    ROUND(AVG(tr.valor_cents) / 100.0, 2) as media_reais\nFROM public.transacoes tr\nWHERE tr.tenant_id = '{{ $json.tenant_id }}'\n    AND tr.usuario_id = '{{ $json.user_id }}'\n    AND tr.data >= CURRENT_DATE - INTERVAL '30 days'\nGROUP BY tr.tipo, tr.categoria\nORDER BY tr.tipo, total_cents DESC;",
        "additionalFields": {}
      },
      "id": "generate-report",
      "name": "Gerar Relat√≥rio",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [1780, 600],
      "credentials": {
        "postgres": {
          "id": "postgres-gestasaas",
          "name": "PostgreSQL GestaSaaS"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "// Formatar relat√≥rio financeiro\nconst data = $input.all();\nconst userName = $('Preparar Dados Usu√°rio').item.json.user_name;\n\nif (!data || data.length === 0) {\n  return {\n    response_text: `üìä *Relat√≥rio Financeiro - GestaSaaS*\\n\\nOl√°, ${userName}!\\n\\nVoc√™ n√£o possui transa√ß√µes nos √∫ltimos 30 dias.\\n\\nüí° Digite *nova transacao* para come√ßar!`,\n    response_type: 'empty_report',\n    user_id: $('Preparar Dados Usu√°rio').item.json.user_id,\n    tenant_id: $('Preparar Dados Usu√°rio').item.json.tenant_id,\n    telefone_e164: $('Preparar Dados Usu√°rio').item.json.telefone_e164\n  };\n}\n\nlet responseText = `üìä *Relat√≥rio Financeiro - √öltimos 30 dias*\\n\\nOl√°, ${userName}!\\n\\n`;\n\nlet totalEntradas = 0;\nlet totalSaidas = 0;\nlet entradas = [];\nlet saidas = [];\n\ndata.forEach(item => {\n  const row = item.json;\n  if (row.tipo === 'entrada') {\n    totalEntradas += parseFloat(row.total_reais);\n    entradas.push(row);\n  } else {\n    totalSaidas += parseFloat(row.total_reais);\n    saidas.push(row);\n  }\n});\n\n// Entradas\nif (entradas.length > 0) {\n  responseText += `üí∞ *ENTRADAS:*\\n`;\n  entradas.forEach(item => {\n    responseText += `‚Ä¢ ${item.categoria}: R$ ${item.total_reais} (${item.quantidade}x)\\n`;\n  });\n  responseText += `*Total Entradas: R$ ${totalEntradas.toFixed(2)}*\\n\\n`;\n}\n\n// Sa√≠das\nif (saidas.length > 0) {\n  responseText += `üí∏ *SA√çDAS:*\\n`;\n  saidas.forEach(item => {\n    responseText += `‚Ä¢ ${item.categoria}: R$ ${item.total_reais} (${item.quantidade}x)\\n`;\n  });\n  responseText += `*Total Sa√≠das: R$ ${totalSaidas.toFixed(2)}*\\n\\n`;\n}\n\n// Resumo\nconst saldo = totalEntradas - totalSaidas;\nconst saldoIcon = saldo >= 0 ? '‚úÖ' : '‚ö†Ô∏è';\n\nresponseText += `üìà *RESUMO GERAL:*\\n`;\nresponseText += `üí∞ Total Entradas: R$ ${totalEntradas.toFixed(2)}\\n`;\nresponseText += `üí∏ Total Sa√≠das: R$ ${totalSaidas.toFixed(2)}\\n`;\nresponseText += `${saldoIcon} Saldo L√≠quido: R$ ${saldo.toFixed(2)}\\n\\n`;\n\nif (saldo < 0) {\n  responseText += `‚ö†Ô∏è *Aten√ß√£o:* Suas sa√≠das est√£o maiores que as entradas!\\n\\n`;\n}\n\nresponseText += `üí° Digite *transacoes* para ver detalhes\\n`;\nresponseText += `üí° Digite *menu* para outras op√ß√µes`;\n\nreturn {\n  response_text: responseText,\n  response_type: 'financial_report',\n  user_id: $('Preparar Dados Usu√°rio').item.json.user_id,\n  tenant_id: $('Preparar Dados Usu√°rio').item.json.tenant_id,\n  telefone_e164: $('Preparar Dados Usu√°rio').item.json.telefone_e164,\n  total_entradas: totalEntradas,\n  total_saidas: totalSaidas,\n  saldo: saldo\n};"
      },
      "id": "format-report",
      "name": "Formatar Relat√≥rio",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [2000, 600]
    },
    {
      "parameters": {
        "functionCode": "// Mostrar dados do perfil do usu√°rio\nconst userData = $('Buscar Usu√°rio').item.json;\nconst userName = userData.nome;\n\nconst profileText = `üë§ *Meu Perfil - GestaSaaS*\\n\\nOl√°, ${userName}!\\n\\nüìã *Seus Dados:*\\n\\n‚Ä¢ *Nome:* ${userData.nome}\\n‚Ä¢ *Email:* ${userData.email}\\n‚Ä¢ *Telefone:* ${userData.telefone_e164}\\n‚Ä¢ *Perfil:* ${userData.perfil}\\n‚Ä¢ *Status:* ${userData.status}\\n‚Ä¢ *Email Verificado:* ${userData.email_verificado ? 'Sim' : 'N√£o'}\\n‚Ä¢ *Empresa:* ${userData.tenant_nome}\\n‚Ä¢ *Membro desde:* ${new Date(userData.criado_em).toLocaleDateString('pt-BR')}\\n\\nüí° Para alterar seus dados, entre em contato com o suporte.\\n\\nüí° Digite *menu* para voltar ao menu principal`;\n\nreturn {\n  response_text: profileText,\n  response_type: 'user_profile',\n  user_id: userData.id,\n  tenant_id: userData.tenant_id,\n  telefone_e164: $('Preparar Dados Usu√°rio').item.json.telefone_e164\n};"
      },
      "id": "show-profile",
      "name": "Mostrar Perfil",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [1780, 700]
    },
    {
      "parameters": {
        "functionCode": "// Resposta para usu√°rio n√£o cadastrado\nconst phoneNumber = $('Processar Dados WhatsApp').item.json.telefone_e164;\n\nconst notFoundText = `‚ùå *Usu√°rio n√£o encontrado - GestaSaaS*\\n\\nOl√°! üëã\\n\\nO n√∫mero ${phoneNumber} n√£o est√° cadastrado em nosso sistema ou est√° inativo.\\n\\nüìù *Para se cadastrar:*\\n1. Acesse nosso site ou app\\n2. Fa√ßa seu registro\\n3. Confirme seu n√∫mero de telefone\\n\\nüìû *Suporte:*\\nSe voc√™ j√° possui cadastro, entre em contato com nosso suporte.\\n\\nüí° Ap√≥s o cadastro, voc√™ poder√° usar todos os recursos via WhatsApp!`;\n\nreturn {\n  response_text: notFoundText,\n  response_type: 'user_not_found',\n  telefone_e164: phoneNumber\n};"
      },
      "id": "user-not-found",
      "name": "Usu√°rio N√£o Encontrado",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [1340, 300]
    },
    {
      "parameters": {
        "functionCode": "// Resposta para dados inv√°lidos\nconst errorData = $('Processar Dados WhatsApp').item.json;\n\nlet errorText = `‚ùå *Erro - GestaSaaS*\\n\\n`;\n\nif (errorData.isGroup) {\n  errorText += `Desculpe, n√£o atendemos mensagens de grupos.\\n\\nPor favor, me envie uma mensagem privada.`;\n} else {\n  errorText += `Dados inv√°lidos recebidos.\\n\\nTente novamente ou entre em contato com o suporte.`;\n}\n\nreturn {\n  response_text: errorText,\n  response_type: 'error',\n  error_details: errorData\n};"
      },
      "id": "error-response",
      "name": "Resposta de Erro",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [900, 400]
    },
    {
      "parameters": {
        "url": "={{ $json.evolution_api_url || 'https://your-evolution-api.com' }}/message/sendText/{{ $json.instance_name || 'gestasaas' }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "httpMethod": "POST",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "apikey",
              "value": "={{ $json.evolution_api_key || 'your-api-key' }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $json.telefone_e164.replace('+', '') }}"
            },
            {
              "name": "text",
              "value": "={{ $json.response_text }}"
            }
          ]
        },
        "options": {}
      },
      "id": "send-whatsapp-message",
      "name": "Enviar Mensagem WhatsApp",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [2220, 300]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ { \"success\": true, \"message\": \"Mensagem processada com sucesso\", \"timestamp\": new Date().toISOString() } }}"
      },
      "id": "webhook-response",
      "name": "Resposta Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [2440, 300]
    }
  ],
  "connections": {
    "Webhook WhatsApp": {
      "main": [
        [
          {
            "node": "Processar Dados WhatsApp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Processar Dados WhatsApp": {
      "main": [
        [
          {
            "node": "Validar Dados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validar Dados": {
      "main": [
        [
          {
            "node": "Buscar Usu√°rio",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Resposta de Erro",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Buscar Usu√°rio": {
      "main": [
        [
          {
            "node": "Usu√°rio Existe?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Usu√°rio Existe?": {
      "main": [
        [
          {
            "node": "Preparar Dados Usu√°rio",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Usu√°rio N√£o Encontrado",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Preparar Dados Usu√°rio": {
      "main": [
        [
          {
            "node": "Switch Comandos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Comandos": {
      "main": [
        [
          {
            "node": "Gerar Menu",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Listar Transa√ß√µes",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Guia Nova Transa√ß√£o",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Guia Editar Transa√ß√£o",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Guia Excluir Transa√ß√£o",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Gerar Relat√≥rio",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Mostrar Perfil",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Assistente IA",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Listar Transa√ß√µes": {
      "main": [
        [
          {
            "node": "Formatar Transa√ß√µes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gerar Relat√≥rio": {
      "main": [
        [
          {
            "node": "Formatar Relat√≥rio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gerar Menu": {
      "main": [
        [
          {
            "node": "Enviar Mensagem WhatsApp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Formatar Transa√ß√µes": {
      "main": [
        [
          {
            "node": "Enviar Mensagem WhatsApp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Guia Nova Transa√ß√£o": {
      "main": [
        [
          {
            "node": "Enviar Mensagem WhatsApp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Guia Editar Transa√ß√£o": {
      "main": [
        [
          {
            "node": "Enviar Mensagem WhatsApp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Guia Excluir Transa√ß√£o": {
      "main": [
        [
          {
            "node": "Enviar Mensagem WhatsApp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Formatar Relat√≥rio": {
      "main": [
        [
          {
            "node": "Enviar Mensagem WhatsApp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mostrar Perfil": {
      "main": [
        [
          {
            "node": "Enviar Mensagem WhatsApp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Assistente IA": {
      "main": [
        [
          {
            "node": "Enviar Mensagem WhatsApp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Usu√°rio N√£o Encontrado": {
      "main": [
        [
          {
            "node": "Enviar Mensagem WhatsApp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Resposta de Erro": {
      "main": [
        [
          {
            "node": "Enviar Mensagem WhatsApp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enviar Mensagem WhatsApp": {
      "main": [
        [
          {
            "node": "Resposta Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "id": "gestasaas",
      "name": "GestaSaaS"
    },
    {
      "id": "whatsapp",
      "name": "WhatsApp"
    },
    {
      "id": "database",
      "name": "Database"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-10-20T18:36:00.000Z",
  "versionId": "1"
}